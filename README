cppjson - JSON serialization library for C++ STL
Copyright 2012 Janne Kulmala <janne.t.kulmala@iki.fi>

Program code is licensed with GNU LGPL 2.1. See COPYING.LGPL file.

See the example program (example.cc) that fetches and displays a Twitter feed.

This library exposes just one class: json::Value. json::Value object 
holds a single value or a recursive data structure. The available types 
are: Null, integer, floating point number, string, boolean, an array of 
Values, or an JSON object (key-value pairs). All numbers in JSON are 
floating point, but this library tries to use 64-bit integers to store 
numbers to avoid loss of precision. json::Value provides methods to load 
the contents of the objects from from a JSON input, or serialize the 
content as JSON. The objects act as any C++ values, and support 
assigment and copying, and can be used in comparsions.

The library is designed to have high performance when loading large 
structures: No expensive copying of large structures are performed, and 
the decoder uses a stream object as the input which allows loading directly
from a file without having to read into memory first.

To reduce the coded needed to validate incoming structures, the 
json::Value has getters for different data types throw exceptions on 
type mismatch.

Lazy loading
------------
The decoder can be used to load files larger than the available memory. 
Because such files often consist of huge arrays with tiny objects, the 
decoder provides an option to skips over arrays in the input and 
replaces them with special lazy arrays, which can be used to iterate over 
the contents of the arrays sequentially. The objects keep an internal 
reference to the original input stream so that the whole array doesn't 
need to be loaded in the memory at once.
